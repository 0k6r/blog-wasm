[package]
name = "blog-wasm"
categories = ["wasm"]
version = "0.0.3"
authors = ["Konstantin Petrov <oku6er@gmail.com>"]
description = "Blog app built with Rust and WebAssembly."
repository = "https://github.com/0k6r/blog_webasm.git"
license = "Apache-2.0"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

# A logger that prints all messages in browser's console.
web_logger = "0.2.0"
log = "0.4.8"

# Date and Time for Rust.
chrono = { version = "0.4.10", features = ["serde"] }

# Serde is a framework for serializing and deserializing Rust data structures efficiently and generically.
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

#This library provides a convenient derive macro for the standard library's [`std::error::Error`] trait.
thiserror = "1"

[dev-dependencies]
wasm-bindgen-test = "0.3"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
